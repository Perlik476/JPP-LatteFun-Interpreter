-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from ParLatteFun.y
-----------------------------------------------------------------------------


rule 40 is unused
rule 41 is unused
rule 42 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListInit                                (4)
	Init -> Type Ident '(' ListArg ')' Block           (5)
	Init -> Type Ident '=' Expr ';'                    (6)
	ListInit -> Init                                   (7)
	ListInit -> Init ListInit                          (8)
	Arg -> Type Ident                                  (9)
	Arg -> Type 'ref' Ident                            (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '{' ListStmt '}'                          (14)
	ListStmt ->                                        (15)
	ListStmt -> Stmt ListStmt                          (16)
	Stmt -> ';'                                        (17)
	Stmt -> Block                                      (18)
	Stmt -> Type Ident ';'                             (19)
	Stmt -> Init                                       (20)
	Stmt -> Ident '=' Expr ';'                         (21)
	Stmt -> Ident '++' ';'                             (22)
	Stmt -> Ident '--' ';'                             (23)
	Stmt -> 'return' Expr ';'                          (24)
	Stmt -> 'return' ';'                               (25)
	Stmt -> 'if' '(' Expr ')' Block                    (26)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (27)
	Stmt -> 'while' '(' Expr ')' Block                 (28)
	Stmt -> Expr ';'                                   (29)
	Type -> 'int'                                      (30)
	Type -> 'string'                                   (31)
	Type -> 'bool'                                     (32)
	Type -> 'void'                                     (33)
	Type -> '[' '(' ListTArg ')' '->' Type ']'         (34)
	TArg -> Type                                       (35)
	TArg -> Type 'ref'                                 (36)
	ListTArg ->                                        (37)
	ListTArg -> TArg                                   (38)
	ListTArg -> TArg ',' ListTArg                      (39)
	ListType ->                                        (40)
	ListType -> Type                                   (41)
	ListType -> Type ',' ListType                      (42)
	Expr6 -> Ident                                     (43)
	Expr6 -> Integer                                   (44)
	Expr6 -> 'true'                                    (45)
	Expr6 -> 'false'                                   (46)
	Expr6 -> Ident '(' ListExpr ')'                    (47)
	Expr6 -> '(' Expr ')' '(' ListExpr ')'             (48)
	Expr6 -> String                                    (49)
	Expr6 -> '(' Expr ')'                              (50)
	Expr5 -> '-' Expr6                                 (51)
	Expr5 -> '!' Expr6                                 (52)
	Expr5 -> Expr6                                     (53)
	Expr4 -> Expr4 MulOp Expr5                         (54)
	Expr4 -> Expr5                                     (55)
	Expr3 -> Expr3 AddOp Expr4                         (56)
	Expr3 -> Expr4                                     (57)
	Expr2 -> Expr2 RelOp Expr3                         (58)
	Expr2 -> Expr3                                     (59)
	Expr1 -> Expr2 '&&' Expr1                          (60)
	Expr1 -> Expr2                                     (61)
	Expr -> Expr1 '||' Expr                            (62)
	Expr -> 'lambda' '(' ListArg ')' '->' Type '.' Expr   (63)
	Expr -> 'λ' '(' ListArg ')' '->' Type '.' Expr     (64)
	Expr -> 'lambda' '(' ListArg ')' '->' Type Block   (65)
	Expr -> 'λ' '(' ListArg ')' '->' Type Block        (66)
	Expr -> Expr1                                      (67)
	ListExpr ->                                        (68)
	ListExpr -> Expr                                   (69)
	ListExpr -> Expr ',' ListExpr                      (70)
	AddOp -> '+'                                       (71)
	AddOp -> '-'                                       (72)
	MulOp -> '*'                                       (73)
	MulOp -> '/'                                       (74)
	MulOp -> '%'                                       (75)
	RelOp -> '<'                                       (76)
	RelOp -> '<='                                      (77)
	RelOp -> '>'                                       (78)
	RelOp -> '>='                                      (79)
	RelOp -> '=='                                      (80)
	RelOp -> '!='                                      (81)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'->'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	']'            { PT _ (TS _ 24) }
	'bool'         { PT _ (TS _ 25) }
	'else'         { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'lambda'       { PT _ (TS _ 30) }
	'ref'          { PT _ (TS _ 31) }
	'return'       { PT _ (TS _ 32) }
	'string'       { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'void'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	'}'            { PT _ (TS _ 39) }
	'λ'            { PT _ (TS _ 40) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Init            rules 5, 6
	ListInit        rules 7, 8
	Arg             rules 9, 10
	ListArg         rules 11, 12, 13
	Block           rule  14
	ListStmt        rules 15, 16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Type            rules 30, 31, 32, 33, 34
	TArg            rules 35, 36
	ListTArg        rules 37, 38, 39
	ListType        rules 40, 41, 42
	Expr6           rules 43, 44, 45, 46, 47, 48, 49, 50
	Expr5           rules 51, 52, 53
	Expr4           rules 54, 55
	Expr3           rules 56, 57
	Expr2           rules 58, 59
	Expr1           rules 60, 61
	Expr            rules 62, 63, 64, 65, 66, 67
	ListExpr        rules 68, 69, 70
	AddOp           rules 71, 72
	MulOp           rules 73, 74, 75
	RelOp           rules 76, 77, 78, 79, 80, 81

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Program        goto state 3
	Init           goto state 4
	ListInit       goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListInit -> Init .                                  (rule 7)
	ListInit -> Init . ListInit                         (rule 8)

	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	%eof           reduce using rule 7

	Init           goto state 4
	ListInit       goto state 14
	Type           goto state 6

State 5

	Program -> ListInit .                               (rule 4)

	%eof           reduce using rule 4


State 6

	Init -> Type . Ident '(' ListArg ')' Block          (rule 5)
	Init -> Type . Ident '=' Expr ';'                   (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 7

	Type -> '[' . '(' ListTArg ')' '->' Type ']'        (rule 34)

	'('            shift, and enter state 12


State 8

	Type -> 'bool' .                                    (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	'.'            reduce using rule 32
	']'            reduce using rule 32
	'ref'          reduce using rule 32
	'{'            reduce using rule 32
	L_Ident        reduce using rule 32


State 9

	Type -> 'int' .                                     (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	'.'            reduce using rule 30
	']'            reduce using rule 30
	'ref'          reduce using rule 30
	'{'            reduce using rule 30
	L_Ident        reduce using rule 30


State 10

	Type -> 'string' .                                  (rule 31)

	')'            reduce using rule 31
	','            reduce using rule 31
	'.'            reduce using rule 31
	']'            reduce using rule 31
	'ref'          reduce using rule 31
	'{'            reduce using rule 31
	L_Ident        reduce using rule 31


State 11

	Type -> 'void' .                                    (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	'.'            reduce using rule 33
	']'            reduce using rule 33
	'ref'          reduce using rule 33
	'{'            reduce using rule 33
	L_Ident        reduce using rule 33


State 12

	Type -> '[' '(' . ListTArg ')' '->' Type ']'        (rule 34)

	')'            reduce using rule 37
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 17
	TArg           goto state 18
	ListTArg       goto state 19

State 13

	Init -> Type Ident . '(' ListArg ')' Block          (rule 5)
	Init -> Type Ident . '=' Expr ';'                   (rule 6)

	'('            shift, and enter state 15
	'='            shift, and enter state 16


State 14

	ListInit -> Init ListInit .                         (rule 8)

	%eof           reduce using rule 8


State 15

	Init -> Type Ident '(' . ListArg ')' Block          (rule 5)

	')'            reduce using rule 11
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 42
	ListArg        goto state 43
	Type           goto state 44

State 16

	Init -> Type Ident '=' . Expr ';'                   (rule 6)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 32

State 17

	TArg -> Type .                                      (rule 35)
	TArg -> Type . 'ref'                                (rule 36)

	')'            reduce using rule 35
	','            reduce using rule 35
	'ref'          shift, and enter state 22


State 18

	ListTArg -> TArg .                                  (rule 38)
	ListTArg -> TArg . ',' ListTArg                     (rule 39)

	')'            reduce using rule 38
	','            shift, and enter state 21


State 19

	Type -> '[' '(' ListTArg . ')' '->' Type ']'        (rule 34)

	')'            shift, and enter state 20


State 20

	Type -> '[' '(' ListTArg ')' . '->' Type ']'        (rule 34)

	'->'           shift, and enter state 73


State 21

	ListTArg -> TArg ',' . ListTArg                     (rule 39)

	')'            reduce using rule 37
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 17
	TArg           goto state 18
	ListTArg       goto state 72

State 22

	TArg -> Type 'ref' .                                (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36


State 23

	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 71
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 24

	Expr6 -> Integer .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 25

	Expr6 -> String .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 26

	Expr5 -> Expr6 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 27

	Expr4 -> Expr5 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 28

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr4 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            shift, and enter state 68
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            shift, and enter state 69
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            shift, and enter state 70
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	MulOp          goto state 67

State 29

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr3 .                                    (rule 59)

	'!='           reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'+'            shift, and enter state 65
	','            reduce using rule 59
	'-'            shift, and enter state 66
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59

	AddOp          goto state 64

State 30

	Expr2 -> Expr2 . RelOp Expr3                        (rule 58)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 60)
	Expr1 -> Expr2 .                                    (rule 61)

	'!='           shift, and enter state 57
	'&&'           shift, and enter state 58
	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'<'            shift, and enter state 59
	'<='           shift, and enter state 60
	'=='           shift, and enter state 61
	'>'            shift, and enter state 62
	'>='           shift, and enter state 63
	'||'           reduce using rule 61

	RelOp          goto state 56

State 31

	Expr -> Expr1 . '||' Expr                           (rule 62)
	Expr -> Expr1 .                                     (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	'||'           shift, and enter state 55


State 32

	Init -> Type Ident '=' Expr . ';'                   (rule 6)

	';'            shift, and enter state 54


State 33

	Expr5 -> '!' . Expr6                                (rule 52)

	'('            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 53

State 34

	Expr6 -> '(' . Expr ')' '(' ListExpr ')'            (rule 48)
	Expr6 -> '(' . Expr ')'                             (rule 50)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 52

State 35

	Expr5 -> '-' . Expr6                                (rule 51)

	'('            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 51

State 36

	Expr6 -> 'false' .                                  (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 37

	Expr -> 'lambda' . '(' ListArg ')' '->' Type '.' Expr    (rule 63)
	Expr -> 'lambda' . '(' ListArg ')' '->' Type Block    (rule 65)

	'('            shift, and enter state 50


State 38

	Expr6 -> 'true' .                                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 39

	Expr -> 'λ' . '(' ListArg ')' '->' Type '.' Expr    (rule 64)
	Expr -> 'λ' . '(' ListArg ')' '->' Type Block       (rule 66)

	'('            shift, and enter state 49


State 40

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 41

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 42

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 48


State 43

	Init -> Type Ident '(' ListArg . ')' Block          (rule 5)

	')'            shift, and enter state 47


State 44

	Arg -> Type . Ident                                 (rule 9)
	Arg -> Type . 'ref' Ident                           (rule 10)

	'ref'          shift, and enter state 46
	L_Ident        shift, and enter state 2

	Ident          goto state 45

State 45

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 46

	Arg -> Type 'ref' . Ident                           (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 88

State 47

	Init -> Type Ident '(' ListArg ')' . Block          (rule 5)

	'{'            shift, and enter state 87

	Block          goto state 86

State 48

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 42
	ListArg        goto state 85
	Type           goto state 44

State 49

	Expr -> 'λ' '(' . ListArg ')' '->' Type '.' Expr    (rule 64)
	Expr -> 'λ' '(' . ListArg ')' '->' Type Block       (rule 66)

	')'            reduce using rule 11
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 42
	ListArg        goto state 84
	Type           goto state 44

State 50

	Expr -> 'lambda' '(' . ListArg ')' '->' Type '.' Expr    (rule 63)
	Expr -> 'lambda' '(' . ListArg ')' '->' Type Block    (rule 65)

	')'            reduce using rule 11
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 42
	ListArg        goto state 83
	Type           goto state 44

State 51

	Expr5 -> '-' Expr6 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 52

	Expr6 -> '(' Expr . ')' '(' ListExpr ')'            (rule 48)
	Expr6 -> '(' Expr . ')'                             (rule 50)

	')'            shift, and enter state 82


State 53

	Expr5 -> '!' Expr6 .                                (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 54

	Init -> Type Ident '=' Expr ';' .                   (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'['            reduce using rule 6
	'bool'         reduce using rule 6
	'false'        reduce using rule 6
	'if'           reduce using rule 6
	'int'          reduce using rule 6
	'lambda'       reduce using rule 6
	'return'       reduce using rule 6
	'string'       reduce using rule 6
	'true'         reduce using rule 6
	'void'         reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	'λ'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 55

	Expr -> Expr1 '||' . Expr                           (rule 62)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 81

State 56

	Expr2 -> Expr2 RelOp . Expr3                        (rule 58)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 80

State 57

	RelOp -> '!=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 58

	Expr1 -> Expr2 '&&' . Expr1                         (rule 60)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 79

State 59

	RelOp -> '<' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 60

	RelOp -> '<=' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 61

	RelOp -> '==' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 62

	RelOp -> '>' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 63

	RelOp -> '>=' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 64

	Expr3 -> Expr3 AddOp . Expr4                        (rule 56)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 78

State 65

	AddOp -> '+' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 66

	AddOp -> '-' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 67

	Expr4 -> Expr4 MulOp . Expr5                        (rule 54)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 77

State 68

	MulOp -> '%' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 69

	MulOp -> '*' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 70

	MulOp -> '/' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 71

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 47)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	')'            reduce using rule 68
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 75
	ListExpr       goto state 76

State 72

	ListTArg -> TArg ',' ListTArg .                     (rule 39)

	')'            reduce using rule 39


State 73

	Type -> '[' '(' ListTArg ')' '->' . Type ']'        (rule 34)

	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 74

State 74

	Type -> '[' '(' ListTArg ')' '->' Type . ']'        (rule 34)

	']'            shift, and enter state 105


State 75

	ListExpr -> Expr .                                  (rule 69)
	ListExpr -> Expr . ',' ListExpr                     (rule 70)

	')'            reduce using rule 69
	','            shift, and enter state 104


State 76

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 47)

	')'            shift, and enter state 103


State 77

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 78

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 68
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 69
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 70
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 67

State 79

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'||'           reduce using rule 60


State 80

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 65
	','            reduce using rule 58
	'-'            shift, and enter state 66
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 64

State 81

	Expr -> Expr1 '||' Expr .                           (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62


State 82

	Expr6 -> '(' Expr ')' . '(' ListExpr ')'            (rule 48)
	Expr6 -> '(' Expr ')' .                             (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            shift, and enter state 102
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 83

	Expr -> 'lambda' '(' ListArg . ')' '->' Type '.' Expr    (rule 63)
	Expr -> 'lambda' '(' ListArg . ')' '->' Type Block    (rule 65)

	')'            shift, and enter state 101


State 84

	Expr -> 'λ' '(' ListArg . ')' '->' Type '.' Expr    (rule 64)
	Expr -> 'λ' '(' ListArg . ')' '->' Type Block       (rule 66)

	')'            shift, and enter state 100


State 85

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 86

	Init -> Type Ident '(' ListArg ')' Block .          (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'['            reduce using rule 5
	'bool'         reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'lambda'       reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'void'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	'λ'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 87

	Block -> '{' . ListStmt '}'                         (rule 14)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	';'            shift, and enter state 96
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 36
	'if'           shift, and enter state 97
	'int'          shift, and enter state 9
	'lambda'       shift, and enter state 37
	'return'       shift, and enter state 98
	'string'       shift, and enter state 10
	'true'         shift, and enter state 38
	'void'         shift, and enter state 11
	'while'        shift, and enter state 99
	'{'            shift, and enter state 87
	'}'            reduce using rule 15
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 89
	Integer        goto state 24
	String         goto state 25
	Init           goto state 90
	Block          goto state 91
	ListStmt       goto state 92
	Stmt           goto state 93
	Type           goto state 94
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 95

State 88

	Arg -> Type 'ref' Ident .                           (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 89

	Stmt -> Ident . '=' Expr ';'                        (rule 21)
	Stmt -> Ident . '++' ';'                            (rule 22)
	Stmt -> Ident . '--' ';'                            (rule 23)
	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 71
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           shift, and enter state 118
	'-'            reduce using rule 43
	'--'           shift, and enter state 119
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            shift, and enter state 120
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 90

	Stmt -> Init .                                      (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'['            reduce using rule 20
	'bool'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'lambda'       reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'λ'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 91

	Stmt -> Block .                                     (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'['            reduce using rule 18
	'bool'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'lambda'       reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'λ'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 92

	Block -> '{' ListStmt . '}'                         (rule 14)

	'}'            shift, and enter state 117


State 93

	ListStmt -> Stmt . ListStmt                         (rule 16)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	';'            shift, and enter state 96
	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 36
	'if'           shift, and enter state 97
	'int'          shift, and enter state 9
	'lambda'       shift, and enter state 37
	'return'       shift, and enter state 98
	'string'       shift, and enter state 10
	'true'         shift, and enter state 38
	'void'         shift, and enter state 11
	'while'        shift, and enter state 99
	'{'            shift, and enter state 87
	'}'            reduce using rule 15
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 89
	Integer        goto state 24
	String         goto state 25
	Init           goto state 90
	Block          goto state 91
	ListStmt       goto state 116
	Stmt           goto state 93
	Type           goto state 94
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 95

State 94

	Init -> Type . Ident '(' ListArg ')' Block          (rule 5)
	Init -> Type . Ident '=' Expr ';'                   (rule 6)
	Stmt -> Type . Ident ';'                            (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 115

State 95

	Stmt -> Expr . ';'                                  (rule 29)

	';'            shift, and enter state 114


State 96

	Stmt -> ';' .                                       (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'['            reduce using rule 17
	'bool'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'lambda'       reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'λ'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 97

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 26)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 27)

	'('            shift, and enter state 113


State 98

	Stmt -> 'return' . Expr ';'                         (rule 24)
	Stmt -> 'return' . ';'                              (rule 25)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	';'            shift, and enter state 112
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 111

State 99

	Stmt -> 'while' . '(' Expr ')' Block                (rule 28)

	'('            shift, and enter state 110


State 100

	Expr -> 'λ' '(' ListArg ')' . '->' Type '.' Expr    (rule 64)
	Expr -> 'λ' '(' ListArg ')' . '->' Type Block       (rule 66)

	'->'           shift, and enter state 109


State 101

	Expr -> 'lambda' '(' ListArg ')' . '->' Type '.' Expr    (rule 63)
	Expr -> 'lambda' '(' ListArg ')' . '->' Type Block    (rule 65)

	'->'           shift, and enter state 108


State 102

	Expr6 -> '(' Expr ')' '(' . ListExpr ')'            (rule 48)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	')'            reduce using rule 68
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 75
	ListExpr       goto state 107

State 103

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 104

	ListExpr -> Expr ',' . ListExpr                     (rule 70)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	')'            reduce using rule 68
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 75
	ListExpr       goto state 106

State 105

	Type -> '[' '(' ListTArg ')' '->' Type ']' .        (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	'.'            reduce using rule 34
	']'            reduce using rule 34
	'ref'          reduce using rule 34
	'{'            reduce using rule 34
	L_Ident        reduce using rule 34


State 106

	ListExpr -> Expr ',' ListExpr .                     (rule 70)

	')'            reduce using rule 70


State 107

	Expr6 -> '(' Expr ')' '(' ListExpr . ')'            (rule 48)

	')'            shift, and enter state 130


State 108

	Expr -> 'lambda' '(' ListArg ')' '->' . Type '.' Expr    (rule 63)
	Expr -> 'lambda' '(' ListArg ')' '->' . Type Block    (rule 65)

	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 129

State 109

	Expr -> 'λ' '(' ListArg ')' '->' . Type '.' Expr    (rule 64)
	Expr -> 'λ' '(' ListArg ')' '->' . Type Block       (rule 66)

	'['            shift, and enter state 7
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 128

State 110

	Stmt -> 'while' '(' . Expr ')' Block                (rule 28)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 127

State 111

	Stmt -> 'return' Expr . ';'                         (rule 24)

	';'            shift, and enter state 126


State 112

	Stmt -> 'return' ';' .                              (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'['            reduce using rule 25
	'bool'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'lambda'       reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'λ'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 113

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 26)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 27)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 125

State 114

	Stmt -> Expr ';' .                                  (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'['            reduce using rule 29
	'bool'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'lambda'       reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'λ'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 115

	Init -> Type Ident . '(' ListArg ')' Block          (rule 5)
	Init -> Type Ident . '=' Expr ';'                   (rule 6)
	Stmt -> Type Ident . ';'                            (rule 19)

	'('            shift, and enter state 15
	';'            shift, and enter state 124
	'='            shift, and enter state 16


State 116

	ListStmt -> Stmt ListStmt .                         (rule 16)

	'}'            reduce using rule 16


State 117

	Block -> '{' ListStmt '}' .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'['            reduce using rule 14
	'bool'         reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'lambda'       reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'λ'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 118

	Stmt -> Ident '++' . ';'                            (rule 22)

	';'            shift, and enter state 123


State 119

	Stmt -> Ident '--' . ';'                            (rule 23)

	';'            shift, and enter state 122


State 120

	Stmt -> Ident '=' . Expr ';'                        (rule 21)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 121

State 121

	Stmt -> Ident '=' Expr . ';'                        (rule 21)

	';'            shift, and enter state 137


State 122

	Stmt -> Ident '--' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'['            reduce using rule 23
	'bool'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'lambda'       reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'λ'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 123

	Stmt -> Ident '++' ';' .                            (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'['            reduce using rule 22
	'bool'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'lambda'       reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'λ'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 124

	Stmt -> Type Ident ';' .                            (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'['            reduce using rule 19
	'bool'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'lambda'       reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'λ'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 125

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 26)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 27)

	')'            shift, and enter state 136


State 126

	Stmt -> 'return' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'['            reduce using rule 24
	'bool'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'lambda'       reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'λ'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 127

	Stmt -> 'while' '(' Expr . ')' Block                (rule 28)

	')'            shift, and enter state 135


State 128

	Expr -> 'λ' '(' ListArg ')' '->' Type . '.' Expr    (rule 64)
	Expr -> 'λ' '(' ListArg ')' '->' Type . Block       (rule 66)

	'.'            shift, and enter state 134
	'{'            shift, and enter state 87

	Block          goto state 133

State 129

	Expr -> 'lambda' '(' ListArg ')' '->' Type . '.' Expr    (rule 63)
	Expr -> 'lambda' '(' ListArg ')' '->' Type . Block    (rule 65)

	'.'            shift, and enter state 132
	'{'            shift, and enter state 87

	Block          goto state 131

State 130

	Expr6 -> '(' Expr ')' '(' ListExpr ')' .            (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 131

	Expr -> 'lambda' '(' ListArg ')' '->' Type Block .    (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65


State 132

	Expr -> 'lambda' '(' ListArg ')' '->' Type '.' . Expr    (rule 63)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 141

State 133

	Expr -> 'λ' '(' ListArg ')' '->' Type Block .       (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66


State 134

	Expr -> 'λ' '(' ListArg ')' '->' Type '.' . Expr    (rule 64)

	'!'            shift, and enter state 33
	'('            shift, and enter state 34
	'-'            shift, and enter state 35
	'false'        shift, and enter state 36
	'lambda'       shift, and enter state 37
	'true'         shift, and enter state 38
	'λ'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 26
	Expr5          goto state 27
	Expr4          goto state 28
	Expr3          goto state 29
	Expr2          goto state 30
	Expr1          goto state 31
	Expr           goto state 140

State 135

	Stmt -> 'while' '(' Expr ')' . Block                (rule 28)

	'{'            shift, and enter state 87

	Block          goto state 139

State 136

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 26)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 27)

	'{'            shift, and enter state 87

	Block          goto state 138

State 137

	Stmt -> Ident '=' Expr ';' .                        (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'['            reduce using rule 21
	'bool'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'lambda'       reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'λ'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 138

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 26)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 27)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'['            reduce using rule 26
	'bool'         reduce using rule 26
	'else'         shift, and enter state 142
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'lambda'       reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'λ'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 139

	Stmt -> 'while' '(' Expr ')' Block .                (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'['            reduce using rule 28
	'bool'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'lambda'       reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'λ'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 140

	Expr -> 'λ' '(' ListArg ')' '->' Type '.' Expr .    (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64


State 141

	Expr -> 'lambda' '(' ListArg ')' '->' Type '.' Expr .    (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63


State 142

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 27)

	'{'            shift, and enter state 87

	Block          goto state 143

State 143

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'['            reduce using rule 27
	'bool'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'lambda'       reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'λ'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 82
Number of terminals: 43
Number of non-terminals: 27
Number of states: 144

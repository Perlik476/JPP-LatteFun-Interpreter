[(int) -> int] modify_at(int index, int value, [(int) -> int] f) {
    return lambda (int i) -> int {
        if (i == index) {
            return value;
        }
        else {
            return f(i);
        }
    };
}

int main() {
    [(int) -> int] g = lambda (int i) -> int . i;
    g = lambda (int i) -> int {
        if (i == 0) {
            return 0;
        }
        else {
            return g(i - 1);
        }
    };
    // g = modify_at(4, 1, g);
    // g = modify_at(5, 1, g);
    println(g(0)); // 1
    println(g(1)); // 1
    println(g(2)); // 2
    println(g(3)); // 3
    println(g(4)); // 4
    println(g(5)); // 5
    println(g(6)); // 6
    println(g(7)); // 7
    println(g(8)); // 8
    println(g(9)); // 9
    return 0;
}
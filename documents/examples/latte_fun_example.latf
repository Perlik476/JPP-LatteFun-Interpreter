int fib(int n) {
    bool check(int n) {
        return n < 2;
    }

    if (check(n)) {
        return n;
    }

    return fib(n - 1) + fib(n - 2);
}

[(int, int) -> int] create_sum_function() {
    return lambda (int a, int b) -> int . a + b;
}

int main() {
    [([(int, int) -> int], int) -> int] f = λ ([(int, int) -> int] f, int x) -> int . f(x, x);
    [(int, int) -> int] sum = create_sum_function();
    print(f(sum, 7)); // 14

    [(int, int) -> void] printNTimes = λ (int x, int n) -> int {
        while (n > 0) {
            print(x);
            n = n - 1;
        }
    };
    printNTimes(7, 3); 
    /*
    7
    7
    7
    */

    [(int) -> int] fib2 = fib;
    print(fib2(6)); // 8

    int x = (lambda (int x) -> int . x + 1)(20);
    print(x); // 21

    int y = 2;
    (λ (int ref x) -> void {
        x = 37;
    })(y);
    print(y); // 37

    x = 42;
    (λ (int x) -> void {
        x = 11;
    })(x);
    print(x); // 42

    (λ () -> void {
        x = 11;
    })();
    print(x); // 11

    int z;
    print(z); // 0

    [(string, bool) -> int] g;
    print(g("abc", true)); // 0

    return 0;
}